program -> declaration-list
declaration-list -> declaration declaration-list-1
declaration-list-1 -> declaration declaration-list-1
declaration-list-1 -> ^
declaration -> type-specifier ID declaration-1
declaration-1 -> var-declaration-1
declaration-1 -> ( params ) compound-stmt
var-declaration -> type-specifier ID var-declaration-1
var-declaration-1 -> ;
var-declaration-1 -> [ NUM ] ;
type-specifier -> int
type-specifier -> void 
fun-declaration -> type-specifier ID ( params ) compound-stmt
params -> void params-1
params -> int ID param-1 param-list-1
params-1 -> ID param-1 param-list-1
params-1 -> ^
param-list -> param param-list-1
param-list-1 -> , param param-list-1
param-list-1 -> ^
param -> type-specifier ID param-1
param-1 -> [ ]
param-1 -> ^
compound-stmt -> { local-declarations statement-list }
local-declarations -> local-declarations-1
local-declarations-1 -> var-declaration local-declarations-1
local-declarations-1 -> ^
statement-list -> statement-list-1
statement-list-1 -> statement statement-list-1
statement-list-1 -> ^
statement -> expression-stmt
statement -> compound-stmt
statement -> selection-stmt
statement -> iteration-stmt
statement -> return-stmt
selection-stmt -> if ( expression ) statement selection-stmt-1
selection-stmt-1 -> else statement
selection-stmt-1 -> ^
expression-stmt -> expression ;
expression-stmt -> ;
iteration-stmt -> while ( expression ) statement
return-stmt -> return return-stmt-1
return-stmt-1 -> ;
return-stmt-1 -> expression ;
expression -> ID expression-1
expression -> ( expression ) term-1 additive-expression-1 simple-expression-1
expression -> NUM term-1 additive-expression-1 simple-expression-1
expression-1 -> var-1 expression-2
expression-1 -> ( args ) term-1 additive-expression-1 simple-expression-1
expression-2 -> = expression
expression-2 -> term-1 additive-expression-1 simple-expression-1
var-1 -> [ expression ]
var-1 -> ^
simple-expression -> additive-expression simple-expression-1
simple-expression-1 -> relop additive-expression
simple-expression-1 -> ^
relop -> <=
relop -> <
relop -> >
relop -> >=
relop -> ==
relop -> !=
additive-expression -> term additive-expression-1
additive-expression-1 -> addop term additive-expression-1
additive-expression-1 -> ^
addop -> +
addop -> -
term -> factor term-1
term-1 -> mulop factor term-1
term-1 -> ^
mulop -> *
mulop -> /
factor -> ( expression )
factor -> NUM
factor -> ID factor-1
factor-1 -> var-1
factor-1 -> ( args )
args -> arg-list
args -> ^
arg-list -> expression arg-list-1
arg-list-1 -> , expression arg-list-1
arg-list-1 -> ^